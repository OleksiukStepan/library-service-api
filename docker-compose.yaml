services:
  library_service:
    build:
      context: .
    env_file:
      - .env
    ports:
      - "8000:8000"
    volumes:
      - ./:/app
    command: >
      sh -c "python notifications/run_telegram_bot.py &&
      sh -c "python manage.py migrate &&
            python manage.py runserver 0.0.0.0:8000"

  telegram_bot:
    build:
      context: .
    env_file:
      - .env
    volumes:
      - ./:/app
    command: >
      sh -c "python notifications/run_telegram_bot.py"
    depends_on:
      - library_service

  celery:
    build:
      context: .
    volumes:
      - ./:/app
    command: >
      sh -c "celery -A library_service worker --loglevel=info"
    depends_on:
      - redis

  redis:
    image: redis:latest
    expose:
      - 6379
    restart: always

  celery-beat:
    build:
      context: .
    volumes:
      - ./:/app
    command: >
      sh -c "celery -A library_service beat --loglevel=info --scheduler django_celery_beat.schedulers:DatabaseScheduler"
    depends_on:
      - redis
